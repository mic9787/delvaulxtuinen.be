// clearfix
@mixin clearfix() {
  &:after {
    content: '' !important;
    display: block !important;
    clear: both !important;
  }
}
// Quickly apply accessible hiding to elements
@mixin hidden-visually() {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}
// Calculate px to rem
@function calculateRem($size) {
  $remSize: $size / $base-font-size;
  @return #{$remSize}rem;
}
@mixin fontSize($size) {
  // font-size: $size;
  font-size: calculateRem($size);
}
// size mixin
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
@mixin square($size) {
  @include size($size, $size);
}
// Vertical align center
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}
// Creating a circle
@mixin circle($bgSize, $bgColor, $borderColor) {
    @include size($bgSize, $bgSize);
    background-color: $bgColor;
    border: 1px solid $borderColor;
    text-align: center;
    display: block;
    border-radius: 50%;
    line-height: ($bgSize - 2px);
    font-size: ($bgSize - 2px);
}
// HEX to rgba
@mixin BgHexRgba($color, $opacity: 0.3) {
    background: rgba($color, $opacity);
}
// keeping animations fast, slick and flicker-free
@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}
// Remove button style
@mixin unstyledButton() {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}
// Buttons
@mixin button-variant($color, $background, $border) {
  color: $color;
  // background-color: $background;
  // @if $rgbaAmount {
  //   @include BgHexRgba($background, .25);
  // }
  background: $background;
  border: 3px solid $border;
  padding: 15px 30px;
  cursor: pointer;
  border-radius: $border-radius-base;
  @include fontSize(18px);
  outline: 0;
  transition: all ease-in-out 285ms;
  width: 100%;
  @include breakpoint($screen-sm) {
    min-height: 66px;
    min-width: 278px;
    width: auto;
  }
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  &:focus, &.focus, &:hover, &:active, &.active {
    color: $color;
    border-width: 2px;
    @include BgHexRgba($background, .1);
    // @if $rgbaAmount != "" {
    // }
    // background: transparent;
    @if (lightness($color) >= lightness(#aaa)) {
      text-shadow: 1px 1px color(black);
    }
  }
  &.disabled, &[disabled] {
    &, &:hover, &:focus, &.focus, &:active, &.active {
      background-color: $background;
      border-color: $border;
    }
  }
}
